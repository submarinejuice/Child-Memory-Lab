'use strict';
(function(w, d) {
    
  function importScript(src, isDynamicImportModule) {
      var script = d.createElement('script');
      script.src = src;

      if (isDynamicImportModule) {
        script.type = 'module';
      }

      var node = d.getElementsByTagName('script')[0];
      if (node && node.parentNode) {
          node.parentNode.insertBefore(script, node);
      } else {
          document.body.appendChild(script);
      }
  }
    w.adthrive = w.adthrive || {};
    w.adthrive.cmd = w.adthrive.cmd || [];
    w.adthrive.host = "ads.adthrive.com";
    w.adthrive.threshold = 0;
    w.adthrive.styleUrl = "https://ads.adthrive.com/sites/5ca6214ab13d6c3ef8c5f407/ads.min.css";
    w.adthrive.deployment = "stable";
    w.adthrive.branch = "4e751c0";
    w.adthrive.bucket = "prod";
    w.adthrive.baseUrl = "https://ads.adthrive.com/builds/core/4e751c0";
    w.adthrive.deliveryFeatures = ["additiveRaptiveFloors","amazonBetaApstag","consentManagerCMP","trafficShaping","raptiveFloors","raptiveManualCookieSync","rbcrid","recencyFrequency","reissuingSticky","stickyBucketsLocalStorage","switzerlandGdpr","removeAdHost","prebidLoad","gptLoad","amazonLoad","ttdSync"];
    w.adthrive.deliveryAudit = [{"include":"clsInsertion","value":false,"reason":["adOptions.clsOptimizatedAds is false"]},{"include":"prebidLoad","value":true,"reason":["adOptions.delayLoading is false"]},{"include":"gptLoad","value":true,"reason":["adOptions.delayLoading is false"]},{"include":"amazonLoad","value":true,"reason":["adOptions.delayLoading is false","adOptions.amazonUAM is true"]},{"include":"dcsllSiteSpecific","value":false,"reason":["Delivery Feature Missing"]},{"include":"prebidBrowserRouting","value":false,"reason":["Delivery Feature Missing"]},{"include":"disableStickyBuckets","value":false,"reason":["Delivery Feature Missing"]},{"include":"ttdSync","value":true,"reason":["Non-GDPR Country Detected"]},{"include":"viewabilityV2","value":false,"reason":["Delivery Feature Missing"]},{"include":"campaignByURLHash","value":false,"reason":["Delivery Feature Missing"]},{"include":"switzerlandGdpr","value":true,"reason":["Delivery Feature Enabled"]}];
    w.adthrive.deliveryVersion = "1.155.0";
    w.adthrive.isIOS = /iP(hone|od|ad)/i.test(navigator.userAgent) ? true : false;
    w.adthrive.targetPath = '/es5';
    w.adthrive.sticky = true;
    w.adthrive.stickyBucketsEnabled = true;
    w.adthrive.bucketKeys = ["flex-03&2025-07-17-07:a8d8aa1:10:con","hbs-q3&dep-7:pr6649:hbs-q3:63ca8a9:2:exp","hbs-q3:con&dep-7:pr6649:hbs-q3:63ca8a9:2:con","beta03&ade-1714:pr5417:beta03:fb4c9ee:100:exp","beta02&ada-844:pr5671:beta02:115a5fc:100:exp","beta04&ade-2042:pr6166:beta04:b2c175b:100:exp","beta05&pe-195:pr6609:beta05:63f3d25:100:exp","beta06&acd-1132:pr6670:beta06:8812db3:100:exp","beta01&acd-1164:pr6736:beta01:f2f1974:100:exp","flex-35&2025-07-17-07:tpg-6:pr6547:c2d8fa2:4","flex-50&2025-07-17-07:pe-62:pr6682:60cd620:4","flex-19&2025-07-17-07:ada-1253:pr6683:617fa40:4","flex-39&2025-07-17-07:pe-275:pr6705:78889d9:4","flex-43&2025-07-17-07:rpsc-374:pr6688:b202a3a:4","flex-24&2025-07-17-07:adv-124:pr6503:e0beb79:4","flex-40&2025-07-17-07:acd-1147:pr6707:b180768:4","flex-32&2025-07-17-07:tpg-4:pr6598:1a4f0f3:4","flex-25&2025-07-17-07:pe-250:pr6690:551986b:4","flex-31&2025-07-17-07:ada-1261:pr6691:fa7e58f:4","flex-08&2025-07-17-07:rpsc-359:pr6719:90688e9:4","flex-21&2025-07-17-07:pe-277:pr6724:e5e3457:4","flex-07&2025-07-17-07:acd-1162:pr6738:3697d01:1","flex-23&2025-07-17-07:acd-1161:pr6732:cca2fbd:1","flex-27&2025-07-17-07:acd-1058:pr6448:476e8bf:1","flex-33&2025-07-17-07:acd-1089:pr6700:d50ec95:1","flex-14&2025-07-17-07:ada-1285:pr6685:9fddf7a:1","flex-09&2025-07-17-07:rpsc-254:pr6476:0a4b87c:1","flex-18&2025-07-17-07:pe-290:pr6741:d7bb683:1","prod&4e751c0"];
    w.adthrive.forceGDPR = false;
    w.adthrive.secFetchStorageAccess = "active";
    w.adthrive.debug = false;
    w.adthrive.country = "CA";
    w.adthrive.region = "ON";
    w.adthrive.deviceType = "desktop";
    w.adthrive.browserEngine = "chromium";
    
    if ('cookieDeprecationLabel' in navigator) {
      navigator.cookieDeprecationLabel.getValue()
        .then(function(value) {
          w.adthrive.cookieDeprecationLabel = value;
        })
        .catch(function(error) {
          w.adthrive.cmd.push(function () {
            w.adthrive.logError('ads-site-origin-request', 'insertCookieDeprecationLabelCode', ['Unable to set cookie deprecation label.', error]);
          });
        });
    }
  
    
      // Sticky Bucket
      function isValidStickyBucketData(stickyBucket) {
        return (stickyBucket && stickyBucket.bucket && stickyBucket.branch && stickyBucket.deployment && stickyBucket.ttl && stickyBucket.ttl > Date.now() && w.adthrive.bucketKeys && ((w.adthrive.bucketKeys.indexOf(stickyBucket.bucket + '&' + stickyBucket.deployment) > -1) || (stickyBucket.bucket == 'prod' && w.adthrive.bucketKeys.indexOf('prod&' + stickyBucket.branch) > -1)));
      }
      function isMatchingStickyData(stickyBucket) {
        return stickyBucket && w.adthrive.deployment == stickyBucket.deployment && w.adthrive.bucket == stickyBucket.bucket && w.adthrive.branch == stickyBucket.branch;
      }
      function tagNewStickyBucket() {
        var newStickyBucketData = {
          branch: w.adthrive.branch,
          bucket: w.adthrive.bucket,
          deployment: w.adthrive.deployment,
          deliveryFeatures: w.adthrive.deliveryFeatures,
          ttl: Date.now() + (3600 * 1000 * 24),
        };
        if(w.adthrive.deliveryFeatures.indexOf('stickyBucketsLocalStorage') > -1) {
          w.adthrive = w.adthrive || {};
          w.adthrive.cmd = w.adthrive.cmd || [];
          w.adthrive.cmd.push(function() {
            w.adthrive.api.browserStorage.setLocalStorage('at_sticky_data', JSON.stringify(newStickyBucketData))
          });
        } else {
          w.sessionStorage.setItem('at_sticky_data', JSON.stringify(newStickyBucketData));
        }
      }
      var stickyBucketJSON = w.sessionStorage.getItem('at_sticky_data');
      var stickyBucketJSONLocal = w.localStorage.getItem('at_sticky_data');
      if(stickyBucketJSONLocal) {
        stickyBucketJSON = stickyBucketJSONLocal;
      }

      try {
        var stickyBucket = JSON.parse(stickyBucketJSON);
        if (isValidStickyBucketData(stickyBucket)) {
          if (stickyBucket.deliveryFeatures && stickyBucket.deliveryFeatures.indexOf('reissuingSticky') > -1) {
            // check if deployment data in current response matches sticky deployment at_sticky_data
            if (!isMatchingStickyData(stickyBucket)) {
              // we need to reissue ads.min.js with querystring params for sticky deployment info
              // AND we need to return/quit execution of ads.min.js
              var newAdsMinSrc = 'https://' + w.adthrive.host + '/sites/5ca6214ab13d6c3ef8c5f407/ads.min.js?stickyDeployment=' + stickyBucket.deployment + '&stickyBucket=' + stickyBucket.bucket + '&stickyBranch=' + stickyBucket.branch;
              importScript(newAdsMinSrc);
              return;
            }
          } else {
            w.adthrive.branch = stickyBucket.branch;
            w.adthrive.bucket = stickyBucket.bucket;
            w.adthrive.deployment = stickyBucket.deployment;
            w.adthrive.baseUrl = 'https://' + w.adthrive.host + '/builds/core/' + stickyBucket.branch;
          }
        } else {
          tagNewStickyBucket();
        }
      } catch (e) {
        w.adthrive.cmd.push(function () {
          w.adthrive.log = w.adthrive.log || console.log;
          w.adthrive.log('log', 'ads-site-origin-request', 'insertStickyBucketCode', ['Error parsing session storage bucket data']);
        });
        tagNewStickyBucket();
      }

    w.adthrive.siteAds = {"betaTester":false,"targeting":[{"value":"5ca6214ab13d6c3ef8c5f407","key":"siteId"},{"value":"6233884d5de4a77088e2e076","key":"organizationId"},{"value":"Theoi","key":"siteName"},{"value":"Prime","key":"service"},{"value":"on","key":"bidding"},{"value":["History & Culture","Education"],"key":"verticals"}],"siteUrl":"https://theoi.com/","siteId":"5ca6214ab13d6c3ef8c5f407","siteName":"Theoi","breakpoints":{"tablet":768,"desktop":1024},"cloudflare":null,"adUnits":[{"sequence":null,"thirdPartyAdUnitName":null,"targeting":[{"value":["Header"],"key":"location"}],"devices":["tablet","phone"],"name":"Header","sticky":false,"location":"Header","dynamic":{"pageSelector":"","spacing":0,"max":1,"lazyMax":null,"enable":true,"lazy":false,"elementSelector":"#header-ad","skip":0,"classNames":[],"position":"afterbegin","every":1,"enabled":true},"stickyOverlapSelector":"","adSizes":[[728,90],[320,50],[468,60],[970,90],[1,1],[320,100],[970,250],[300,50],[728,250]],"priority":399,"autosize":true},{"sequence":1,"thirdPartyAdUnitName":null,"targeting":[{"value":["Sidebar"],"key":"location"}],"devices":["desktop","tablet"],"name":"Sidebar_1","sticky":false,"location":"Sidebar","dynamic":{"pageSelector":"","spacing":0,"max":0,"lazyMax":1,"enable":true,"lazy":true,"elementSelector":"#sidebar-top-dynamic","skip":0,"classNames":[],"position":"afterbegin","every":1,"enabled":true},"stickyOverlapSelector":"","adSizes":[[160,600],[336,280],[320,50],[300,600],[250,250],[1,1],[320,100],[300,1050],[300,50],[300,420],[300,250]],"priority":299,"autosize":true},{"sequence":9,"thirdPartyAdUnitName":null,"targeting":[{"value":["Sidebar"],"key":"location"},{"value":true,"key":"sticky"}],"devices":["desktop","tablet"],"name":"Sidebar_9","sticky":true,"location":"Sidebar","dynamic":{"pageSelector":"","spacing":0,"max":0,"lazyMax":1,"enable":true,"lazy":true,"elementSelector":"#sidebar-bottom-dynamic","skip":0,"classNames":[],"position":"beforeend","every":1,"enabled":true},"stickyOverlapSelector":"footer","adSizes":[[160,600],[336,280],[320,50],[300,600],[250,250],[1,1],[320,100],[300,1050],[300,50],[300,420],[300,250]],"priority":291,"autosize":true},{"sequence":null,"thirdPartyAdUnitName":null,"targeting":[{"value":["Content"],"key":"location"}],"devices":["desktop","tablet","phone"],"name":"Content","sticky":false,"location":"Content","dynamic":{"pageSelector":"","spacing":1.5,"max":2,"lazyMax":97,"enable":true,"lazy":true,"elementSelector":".thumbnails-row, #main > p","skip":0,"classNames":[],"position":"afterend","every":1,"enabled":true},"stickyOverlapSelector":"","adSizes":[[728,90],[336,280],[320,50],[468,60],[970,90],[250,250],[1,1],[320,100],[970,250],[1,2],[300,50],[300,300],[552,334],[728,250],[300,250]],"priority":199,"autosize":true},{"sequence":null,"thirdPartyAdUnitName":null,"targeting":[{"value":["Content"],"key":"location"}],"devices":["desktop","tablet","phone"],"name":"Content","sticky":false,"location":"Content","dynamic":{"pageSelector":"body.single","spacing":0,"max":2,"lazyMax":97,"enable":true,"lazy":true,"elementSelector":".entry-content > p","skip":3,"classNames":[],"position":"afterend","every":4,"enabled":true},"stickyOverlapSelector":"","adSizes":[[728,90],[336,280],[320,50],[468,60],[970,90],[250,250],[1,1],[320,100],[970,250],[300,50],[300,300],[552,334],[728,250],[300,250],[1,2]],"priority":199,"autosize":true},{"sequence":null,"thirdPartyAdUnitName":null,"targeting":[{"value":["Sidebar"],"key":"location"}],"devices":["desktop"],"name":"Sidebar","sticky":false,"location":"Sidebar","dynamic":{"pageSelector":"body.single ","spacing":0,"max":1,"lazyMax":null,"enable":true,"lazy":false,"elementSelector":".widget_search","skip":0,"classNames":[],"position":"afterend","every":1,"enabled":true},"stickyOverlapSelector":"","adSizes":[[160,600],[336,280],[320,50],[300,600],[250,250],[1,1],[320,100],[300,1050],[300,50],[300,420],[300,250]],"priority":299,"autosize":true},{"sequence":9,"thirdPartyAdUnitName":null,"targeting":[{"value":["Sidebar"],"key":"location"},{"value":true,"key":"sticky"}],"devices":["desktop"],"name":"Sidebar_9","sticky":true,"location":"Sidebar","dynamic":{"pageSelector":"body.single","spacing":0,"max":0,"lazyMax":1,"enable":true,"lazy":true,"elementSelector":"aside.sidebar","skip":0,"classNames":[],"position":"beforeend","every":1,"enabled":true},"stickyOverlapSelector":"footer.site-footer","adSizes":[[160,600],[336,280],[320,50],[300,600],[250,250],[1,1],[320,100],[300,1050],[300,50],[300,420],[300,250]],"priority":291,"autosize":true},{"sequence":null,"thirdPartyAdUnitName":null,"targeting":[{"value":["Footer"],"key":"location"},{"value":true,"key":"sticky"}],"devices":["desktop","phone","tablet"],"name":"Footer","sticky":true,"location":"Footer","dynamic":{"pageSelector":"","spacing":0,"max":1,"lazyMax":null,"enable":true,"lazy":false,"elementSelector":"body","skip":0,"classNames":[],"position":"beforeend","every":1,"enabled":true},"stickyOverlapSelector":"footer","adSizes":[[320,50],[320,100],[728,90],[970,90],[468,60],[1,1],[300,50]],"priority":-1,"autosize":true}],"adDensityLayout":{"mobile":{"adDensity":0.22,"onePerViewport":true},"pageOverrides":[],"desktop":{"adDensity":0.2,"onePerViewport":true}},"adDensityEnabled":true,"siteExperiments":[],"adTypes":{"sponsorTileDesktop":true,"interscrollerDesktop":true,"nativeBelowPostDesktop":true,"miniscroller":true,"largeFormatsMobile":true,"nativeMobileContent":true,"inRecipeRecommendationMobile":true,"nativeMobileRecipe":true,"sponsorTileMobile":true,"expandableCatalogAdsMobile":false,"outstreamMobile":false,"nativeHeaderMobile":true,"inRecipeRecommendationDesktop":true,"nativeDesktopContent":true,"outstreamDesktop":false,"animatedFooter":true,"expandableFooter":true,"nativeDesktopSidebar":true,"videoFootersMobile":true,"videoFootersDesktop":true,"interscroller":true,"nativeDesktopRecipe":true,"nativeHeaderDesktop":true,"nativeBelowPostMobile":true,"expandableCatalogAdsDesktop":false,"largeFormatsDesktop":true},"adOptions":{"theTradeDesk":true,"rtbhouse":true,"undertone":true,"sidebarConfig":{"dynamicStickySidebar":{"minHeight":1800,"enabled":false,"blockedSelectors":[]}},"footerCloseButton":true,"teads":true,"seedtag":true,"pmp":true,"thirtyThreeAcross":true,"sharethrough":true,"optimizeVideoPlayersForEarnings":true,"removeVideoTitleWrapper":false,"pubMatic":true,"infiniteScroll":false,"yahoossp":true,"spa":false,"stickyContainerConfig":{"recipeDesktop":{"minHeight":null,"enabled":false},"blockedSelectors":[],"stickyHeaderSelectors":[],"content":{"minHeight":null,"enabled":false},"recipeMobile":{"minHeight":null,"enabled":false}},"sonobi":true,"gatedPrint":{"siteEmailServiceProviderId":null,"defaultOptIn":false,"enabled":false,"newsletterPromptEnabled":false},"yieldmo":true,"footerSelector":"","amazonUAM":true,"gamMCMEnabled":true,"gamMCMChildNetworkCode":"21678768125","rubicon":true,"conversant":false,"openx":true,"customCreativeEnabled":true,"secColor":"#000000","unruly":true,"mediaGrid":true,"bRealTime":true,"adInViewTime":null,"gumgum":true,"comscoreFooter":false,"desktopInterstitial":false,"footerCloseButtonDesktop":true,"ozone":true,"isAutoOptimized":false,"adform":true,"comscoreTAL":false,"targetaff":false,"bgColor":"#FFFFFF","advancePlaylistOptions":{"playlistPlayer":{"enabled":true},"relatedPlayer":{"enabled":true,"applyToFirst":true}},"kargo":true,"liveRampATS":true,"footerCloseButtonMobile":true,"interstitialBlockedPageSelectors":"","prioritizeShorterVideoAds":true,"allowSmallerAdSizes":true,"wakeLock":{"desktopEnabled":true,"mobileValue":15,"mobileEnabled":true,"desktopValue":30},"mobileInterstitial":false,"tripleLift":true,"sensitiveCategories":["alc","ast","cosm","dat","gamv","srh","wtl"],"liveRamp":true,"adthriveEmailIdentity":true,"criteo":true,"nativo":true,"infiniteScrollOptions":{"selector":"","heightThreshold":0},"siteAttributes":{"mobileHeaderSelectors":[],"desktopHeaderSelectors":[]},"dynamicContentSlotLazyLoading":true,"clsOptimizedAds":false,"ogury":true,"aidem":false,"verticals":["History & Culture","Education"],"inImage":false,"stackadapt":true,"usCMP":{"enabled":false,"regions":[]},"advancePlaylist":true,"flipp":false,"delayLoading":false,"inImageZone":null,"appNexus":true,"rise":true,"liveRampId":"","infiniteScrollRefresh":true,"indexExchange":true,"longerVideoAdPod":true},"siteAdsProfiles":[],"thirdPartySiteConfig":{},"sitePartnersDiscounts":[],"videoPlayers":{"contextual":{"autoplayCollapsibleEnabled":false,"defaultPlayerType":"static","overrideEmbedLocation":false},"videoEmbed":"div","footerSelector":null,"players":[],"partners":{"theTradeDesk":true,"unruly":true,"mediaGrid":true,"undertone":true,"gumgum":true,"seedtag":true,"adform":true,"pmp":true,"kargo":true,"thirtyThreeAcross":true,"connatix":true,"stickyOutstream":{"desktop":{"enabled":false},"blockedPageSelectors":"","mobileLocation":null,"allowOnHomepage":false,"mobile":{"enabled":false},"saveVideoCloseState":false,"mobileHeaderSelector":"","allowForPageWithStickyPlayer":{"enabled":false}},"sharethrough":true,"tripleLift":true,"pubMatic":true,"criteo":true,"yahoossp":true,"nativo":true,"aidem":false,"stackadapt":true,"yieldmo":true,"amazonUAM":true,"rubicon":true,"appNexus":true,"rise":true,"openx":true,"indexExchange":true}}};

    
    //Raptive Manual Cookie Sync
    var raptiveUA = w.navigator ? w.navigator.userAgent : '';
    var isSafari = /Safari/.test(raptiveUA) && !(/chrom/i.test(raptiveUA) || /crios/i.test(raptiveUA)) && !/Edge\/|Edg\//.test(raptiveUA);
    var isFirefox = /Firefox/.test(raptiveUA);
    var metaTagList = d.getElementsByTagName('meta');
    var hasHealthDirectedMetaTag = !!Array.from(metaTagList).filter(function(metaTag) {
      return metaTag.name === 'health-directed-treatment' && metaTag.content === 'true';
    }).length;
    if (!isFirefox && !isSafari && ((w.navigator && !w.navigator.globalPrivacyControl) || !w.navigator) && !(hasHealthDirectedMetaTag && (w.adthrive.country === 'US' && w.adthrive.region === 'WA'))) {
      try {
        var g = document.createElement("iframe");
        g.height = 1;
        g.frameBorder = 0;
        g.style.display = "none";
        g.src = "https://ads.adthrive.com/builds/prebid/load-cookie.html?endpoint=https://prebid.production.adthrive.com/cookie_sync&max_sync_count=15&coop_sync=true&bidders=undertone,gumgum,appnexus,adf,ix,kargo,openx,pubmatic,rubicon,triplelift,triplelift_native,33across,conversant,epsilon,unruly,yieldmo,grid,yahoossp,improvedigital,aidem,criteo&args=account:1234";
        if (document.body) {
          document.body.append(g);
        } else {
          document.addEventListener("DOMContentLoaded", function() {
            document.body.appendChild(g);
          });
        }
      } catch (err) {
          console.log("Error with Raptive manual cookie sync. Error: ", err);
      }
    }
    
    
      //TTD User Sync Logic
      var metaTagList = d.getElementsByTagName('meta');
      var hasHealthDirectedMetaTag = !!Array.from(metaTagList).filter(function(metaTag) {
        return metaTag.name === 'health-directed-treatment' && metaTag.content === 'true';
      }).length;
      if (((w.navigator && !w.navigator.globalPrivacyControl) || !w.navigator) && !(hasHealthDirectedMetaTag && (w.adthrive.country === 'US' && w.adthrive.region === 'WA'))) {
        try {
          var unifiedIdExp = w.localStorage.getItem('pbjs-unifiedid_exp');
          // Check if there is expired pbjs-unifiedid_exp value in local storage
          if ((new Date(unifiedIdExp)).getTime() - Date.now() < 0) {
            // Try to call TTD user sync endpoint and set local storage values
            var userSyncUrl = 'https://match.adsrvr.org/track/rid?ttd_pid=iowij76&fmt=json';
            var xhrUserSync = new XMLHttpRequest();
            xhrUserSync.onload = function() {
              var status = xhrUserSync.status;
              if (status === 200) {
                var response = xhrUserSync.response;
                var newExpirationGMTString = new Date(Date.now() + 5184000000).toGMTString();
                w.localStorage.setItem('pbjs-unifiedid_exp', newExpirationGMTString);
                w.localStorage.setItem('pbjs-unifiedid', encodeURIComponent(JSON.stringify(response)));
              } else {
                w.adthrive.cmd.push(function () {
                  w.adthrive.log = w.adthrive.log || console.log;
                  w.adthrive.log('log', 'ads-site-origin-request', 'getTTDUserSync', ['User sync call failed', status]);
                });
              }
            };
            xhrUserSync.open('GET', userSyncUrl, true);
            xhrUserSync.responseType = 'json';
            xhrUserSync.withCredentials = true;
            xhrUserSync.send();
          }
        } catch (err) {
          w.adthrive.cmd.push(function () {
            w.adthrive.log = w.adthrive.log || console.log;
            w.adthrive.log('log', 'ads-site-origin-request', 'getTTDUserSync', ['Error with unifiedId sync', err]);
          });
        }
      }
      
    
    // RBCRID
    w.adthrive.rbcridFinished = function() {};
    var rbcridUrl = 'https://' + w.adthrive.host + '/http-api/crids';
    var xhrRBCrid = new XMLHttpRequest();
    xhrRBCrid.onload = function() {
      var status = xhrRBCrid.status;
      if (status === 200) {
        w.adthrive.rbcrid = xhrRBCrid.response;
        w.adthrive.rbcridFinished(w.adthrive.rbcrid);
      } else {
        w.adthrive.cmd.push(function () {
          w.adthrive.log = w.adthrive.log || console.log;
          w.adthrive.log('log', 'ads-site-origin-request', 'insertRBCrid', ['Unable to get rbcrid data', status]);
        });
      }
    };
    xhrRBCrid.open('GET', rbcridUrl, true);
    xhrRBCrid.responseType = 'json';
    xhrRBCrid.send();
  ;
    
    //GPP V1.1 Code
          
window.__gpp_addFrame = function (n)
{
 if (!window.frames[n])
 {
  if (document.body)
  {
   var i           = document.createElement('iframe');
   i.style.cssText = 'display:none';
   i.name          = n;
   document.body.appendChild(i);
  }
  else
  {
   window.setTimeout(window.__gppaddFrame, 10, n);
  }
 }
};
window.__gpp_stub = function ()
{
 var b       = arguments;
 __gpp.queue = __gpp.queue || [];
 if (!b.length){ return __gpp.queue; }
 var cmd = b[0];
 var clb = b.length > 1 ? b[1] : null;
 var par = b.length > 2 ? b[2] : null;
 if (cmd === 'ping')
 {
  return {
  gppVersion        : '1.1', // must be “Version.Subversion”, current: “1.1”
  cmpStatus         : 'stub', // possible values: stub, loading, loaded, error
  cmpDisplayStatus  : 'hidden', // possible values: hidden, visible, disabled
  supportedAPIs     : ['6:uspv1', '7:usnat'], // list of supported APIs
  cmpId             : 0, // IAB assigned CMP ID, may be 0 during stub/loading
  sectionList       : [],
  applicableSections: [-1], //or 0 or ID set by publisher
  signalStatus      : 'not ready',
  gppString         : ''
  };
 }
 else if (cmd === 'addEventListener')
 {
  __gpp.events = __gpp.events || [];
  if (!('lastId' in __gpp)){ __gpp.lastId = 0; }
  __gpp.lastId++;
  var lnr = __gpp.lastId;
  __gpp.events.push({
                     'id'       : lnr,
                     'callback' : clb,
                     'parameter': par
                    });
  return {
   eventName : 'listenerRegistered',
   listenerId: lnr, // Registered ID of the listener
   data      : true, // positive signal
   pingData: {
    gppVersion        : '1.1',
    cmpStatus         : 'stub',
    cmpDisplayStatus  : 'hidden',
    supportedAPIs     : ['6:uspv1', '7:usnat'],
    cmpId             : 0,
    sectionList       : [],
    applicableSections: [-1], //or 0 or ID set by publisher
    signalStatus      : 'not ready',
    gppString         : ''
   }
  };
 }
 else if (cmd === 'removeEventListener')
 {
  var success = false;
  __gpp.events = __gpp.events || [];
  for(var i=0; i<__gpp.events.length; i++)
  {
   if(__gpp.events[i].id == par)
   {
    __gpp.events[i].splice(i,1);
    success = true;
    break;
   }
  }
  return {
   eventName : 'listenerRemoved', 
   listenerId: par, // Registered ID of the listener
   data      : success, // status info
   pingData: {
    gppVersion        : '1.1',
    cmpStatus         : 'stub',
    cmpDisplayStatus  : 'hidden',
    supportedAPIs     : ['6:uspv1', '7:usnat'],
    cmpId             : 0,
    sectionList       : [],
    applicableSections: [-1], //or 0 or ID set by publisher
    signalStatus      : 'not ready',
    gppString         : ''
   }
  };
}
 //these commands must not be queued but may return null while in stub-mode
 else if (cmd === 'hasSection' || cmd === 'getSection' || cmd === 'getField')
 {
  return null;
 }
 //queue all other commands
 else
 {
  __gpp.queue.push([].slice.apply(b));
 }
};
window.__gpp_msghandler = function (event)
{
 var msgIsString = typeof event.data === 'string';
 try{ var json = msgIsString ? JSON.parse(event.data) : event.data; }
 catch (e){ var json = null; }
 if (typeof (json) === 'object' && json !== null && '__gppCall' in json)
 {
  var i = json.__gppCall;
  window.__gpp(i.command, function (retValue, success)
{
var returnMsg = {
 '__gppReturn': {
  'returnValue': retValue,
  'success'    : success,
  'callId'     : i.callId
 }
};
event.source.postMessage(msgIsString ? JSON.stringify(returnMsg) : returnMsg, '*');
},'parameter' in i? i.parameter: null, 'version' in i ? i.version : '1.1');
 }
};
if (!('__gpp' in window) || (typeof (window.__gpp) !== 'function'))
{
 window.__gpp = window.__gpp_stub;
 window.addEventListener('message', window.__gpp_msghandler, false);
 window.__gpp_addFrame('__gppLocator');
}

    
    
      //esVersionDetection
      function supports(exp) {
          try {
              new Function(exp)();
          } catch (e) {
              return false;
          }
          return true;
      }
      function isUserAgentInvalid() {
          return new RegExp('googleweblight|spider|crawler|curl|wget|ia_archiver|insights|baidu|bot|monitor|scraper|A6-Indexer|addthis|admantx|agentslug|alexa|anderspink|apache-httpclient|apachebench|apis-google|appengine-google|ask jeeves|asynchttpclient|awe.sm|baidu|barkrowler|biglotron|bingpreview|brandverify|bubing|butterfly|buzztalk|cf-uc|check_http|cloudflare|cmradar/0.1|coldfusion|comodo ssl checker|convera|copypants|crowsnest|curl|dap\/nethttp|daumoa|developers.google.com\/+\/web\/snippet\/|digitalpersona fingerprint software|drupact|duckduck|elb-healthchecker|embedly|eoaagent|europarchive|eventmachine httpclient|evrinid|exaleadcloudview|ezooms|ez publish|facebookexternalhit|feedburner|feedfetcher-google|findlink|findthatfile|flipboardproxy|garlik|genieo|getprismatic.com|ghost|gigablast|go http package|google( page speed insights| web preview|google-site-verification|-structured-data-testing-tool|-structureddatatestingtool)|hatena|headless|heritrix|htmlparser|http(_request2|client|s|unit)|httrack|hubspot|ichiro|icoreservice|idmarch|in(agist|sieve|stapaper)|ips-agent|jack|jakarta commons|java|jetslide|jobseeker|js-kit|kimengi|knows.is|kraken|laconica|libwww|lighthouse|linode|lipperhey|longurl|ltx71|lwp-trivial|mappydata|mastodon|mediapartners-google|megaindex.ru|metauri|mfe_expand|mixnode|mon(tastic|tools)|moreover|mrchrome|nberta|net(craft|researchserver|state|vibes)|newrelicpinger|newspaper|newsme|ning|nmap|nutch|online-domain-tools|paessler|page(peek|sinventory|thing)|panopta|peerindex|phantomjs|pingdom|plukkie|proximic|pu_in|publiclibraryarchive.org|python-(httplib2|requests|urllib)|quanti|queryseeker|quicklook|qwanti|re-animator|readability|rebelmouse|relateiq|riddler|rssmicro|ruby|scrapy|seo-audit|seodiver|seokicks|shopwiki|shortlinktranslate|siege|sistrix|site24x7|siteexplorer|skypeuripreview|slack|slurp|socialrank|sogou|spinn3r|squider|statuscake|stripe|summify|teeraid|teoma|test certificate info|tineye|traackr|tweetedtimes|twikle|twitjobsearch|twitmunin|twurly|typhoeus|unwindfetch|uptim(e|ia)|uptm.io|vagabondo|vb project|vigil|vkshare|wappalyzer|watchsumo|webceo|webdatascout|webmon|webscout|wesee|wget|whatsapp|whatweb|wikido|wordpress|wormly|wotbox|xenu link sleuth|xing-contenttabreceiver|yandex|yanga|yeti|yff35|yourls|zelist.ro|zibb|^Mozilla\/5\.0$|Viv\/2', 'i')
          .test(window.navigator.userAgent);
      }

      var supportsIO = 'IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype && 'isIntersecting' in window.IntersectionObserverEntry.prototype;

      var target = 'es5'
      if (supportsIO && supports('async () => Promise.resolve(({ ...{} })).finally(() => Symbol.asyncIterator)')) {
        target = 'es2018';
      }

      var invalid = isUserAgentInvalid() ? 'invalid-ua' : '';

      if(invalid === '') {
        w.adthrive.targetPath = '/' + target;
      }

      w.adthrive.cmd.push(function () {
        w.adthrive.setTargetingFlag('target', ([target, invalid]).filter(function (k) { return k != ''; }));
      });
    
      //getMarmaladeData
      w.adthrive.marmaladeFinished = function() {};
      var page = encodeURIComponent(location.href);
      var campaignsUrl = 'https://' + w.adthrive.host + '/api/v1/marmalade?siteid=5ca6214ab13d6c3ef8c5f407&url=' + page + '&deliveryFeatures=additiveRaptiveFloors,amazonBetaApstag,consentManagerCMP,trafficShaping,raptiveFloors,raptiveManualCookieSync,rbcrid,recencyFrequency,reissuingSticky,stickyBucketsLocalStorage,switzerlandGdpr,removeAdHost,prebidLoad,gptLoad,amazonLoad,ttdSync';
      if (w.fetch) {
        fetch(campaignsUrl)
          .then(function(response) {
            w.adthrive.marmalade = response.json();
            w.adthrive.marmalade.then(function(data) {
              w.adthrive.marmaladeFinished(data);
            });
          })
          .catch(function(error) {
            w.adthrive.cmd.push(function () {
              w.adthrive.logError('ads-site-origin-request', 'insertMarmaladeCode', ['Unable to get marmalade data', error]);
            });
          });
      } else {
          var xhrMarmalade = new XMLHttpRequest();
          xhrMarmalade.onload = function() {
              if (xhrMarmalade.status === 200) {
                  w.adthrive.marmalade = xhrMarmalade.response;
                  w.adthrive.marmaladeFinished(w.adthrive.marmalade);
              }
          };
          xhrMarmalade.open('GET', campaignsUrl, true);
          xhrMarmalade.responseType = 'json';
          xhrMarmalade.send();
      }
    
      if (!w.apstag) {
        //Amazon Load
        importScript('https://c.aps.amazon-adsystem.com/apstag.js');
        var q = function (c, r) {
            var date = new Date().getTime();
            var queueContents = queueContents = [c, r, date];
            w.apstag.queue.push(queueContents);
        };
        w.apstag = {
            init: function () {
                q('i', arguments);
            },
            fetchBids: function () {
                q('f', arguments);
            },
            setDisplayBids: function () {
                return;
            },
            targetingKeys: function () {
                return [];
            },
            dpa: function() {
                q('di', arguments);
            },
            rpa: function() {
                q('ri', arguments);
            },
            upa: function() {
                q('ui', arguments);
            },
            queue: [],
            customPlacements: function() { return {}; },
        };
      }

      //GPT Load
      importScript('https://securepubads.g.doubleclick.net/tag/js/gpt.js');
      w.googletag = w.googletag || {};
      w.googletag.cmd = w.googletag.cmd || [];

      //Prebid Load
      importScript(w.adthrive.baseUrl + '/vendor/prebid' + w.adthrive.targetPath + '/prebid.min.js');
      w.pbjs = w.pbjs || {};
      w.pbjs.que = w.pbjs.que || [];
    
    // Additive Raptive floors
    w.adthrive.additiveRaptiveFloorsFinished = function() {};
    var floorsUrl = 'https://' + w.adthrive.host + '/api/v2/additiveRaptiveFloors/5ca6214ab13d6c3ef8c5f407';
    var xhrFloors = new XMLHttpRequest();
    xhrFloors.onload = function() {
      var status = xhrFloors.status;
      if (status === 200) {
        w.adthrive.additiveRaptiveFloors = xhrFloors.response;
        w.adthrive.additiveRaptiveFloorsFinished(w.adthrive.additiveRaptiveFloors);
      } else {
        w.adthrive.cmd.push(function () {
          w.adthrive.log = w.adthrive.log || console.log;
          w.adthrive.log('log', 'ads-site-origin-request', 'insertAdditiveRaptiveFloorsCode', ['Unable to get floor data', status]);
        });
      }
    };
    xhrFloors.open('GET', floorsUrl, true);
    xhrFloors.responseType = 'json';
    xhrFloors.send();
  
    
    
      // Raptive traffic shaping
      w.adthrive.trafficShapingFinished = function() {};
      var trafficShapingUrl = 'https://' + w.adthrive.host + '/api/v2/trafficShaping/5ca6214ab13d6c3ef8c5f407';
      var xhrTrafficShaping = new XMLHttpRequest();
      xhrTrafficShaping.onload = function() {
        var status = xhrTrafficShaping.status;
        if (status === 200) {
          w.adthrive.trafficShaping = xhrTrafficShaping.response;
          w.adthrive.trafficShapingFinished(w.adthrive.trafficShaping);
        } else {
          w.adthrive.cmd.push(function () {
            w.adthrive.log = w.adthrive.log || console.log;
            w.adthrive.log('log', 'ads-site-origin-request', 'insertTrafficShapingCode', ['Unable to get traffic shaping data', status]);
          });
        }
      };
      xhrTrafficShaping.open('GET', trafficShapingUrl, true);
      xhrTrafficShaping.responseType = 'json';
      xhrTrafficShaping.send();
    
    
  importScript(
    w.adthrive.baseUrl +
    w.adthrive.targetPath +
    '/js/adthrive.min.js' +
    '?deployment=' + w.adthrive.deployment +
    '&bucket='+ w.adthrive.bucket +
    '&deliveryFeatures=additiveRaptiveFloors,amazonBetaApstag,consentManagerCMP,trafficShaping,raptiveFloors,raptiveManualCookieSync,rbcrid,recencyFrequency,reissuingSticky,stickyBucketsLocalStorage,switzerlandGdpr,removeAdHost,prebidLoad,gptLoad,amazonLoad,ttdSync' +
    '&siteid=5ca6214ab13d6c3ef8c5f407' +
    '', false
  );
  
    
})(window, document);